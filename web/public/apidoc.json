{
    "swagger": "2.0",
    "info": {
        "description": "Probe Memory Tester API.",
        "version": "1.0.6",
        "title": "Btech Memory Tester",
        "termsOfService": "#",
        "contact": {
            "email": "michael.pedersen.starmer@bridgetech.tv"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "http://10.0.28.98:3333",
    "basePath": "/api",
    "tags": [
        {
            "name": "memory",
            "description": "Memory test",
            "externalDocs": {
                "description": "Test probe",
                "url": "http://10.0.28.109"
            }
        }
    ],
    "schemes": [
        "https",
        "http"
    ],
    "paths": {
       
        "/queue": {
            "post": {
                "tags": [
                    "queue"
                ],
                "summary": "Add job",
                "description": "",
                "operationId": "addJob",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "xmlFileId",
                        "in": "formData",
                        "description": "ID of the XML configuration file as specified in the DB",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Job"
                        }
                    },
                    {
                        "name": "memory",
                        "in": "formData",
                        "description": "Amount of RAM on probe host",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ]
            }
        },
        

        "/queue/next": {
            "get": {
                "tags": [
                    "queue"
                ],
                "summary": "Start next job",
                "description": "",
                "operationId": "nextJob",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Job"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                },
                "security": [
                    {
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ]
            }
        },

        "/queue/active": {
            "get": {
                "tags": [
                    "queue"
                ],
                "summary": "Get active job",
                "description": "",
                "operationId": "activeJob",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/queue"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            }
        },
        "/stats/job/{jobId}": {
            "get": {
                "tags": [
                    "stats"
                ],
                "summary": "Get stats by job ID",
                "description": "",
                "operationId": "statsByJobId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/queue"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            }
        }
        
    },
    "securityDefinitions": {
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        },
        "petstore_auth": {
            "type": "oauth2",
            "authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
            "flow": "implicit",
            "scopes": {
                "read:pets": "read your pets",
                "write:pets": "modify pets in your account"
            }
        }
    },
    "definitions": {
        "ApiResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Category"
            }
        },
        "Job": {
            "type": "object",
            "required": [
                "memory",
                "xml_file_id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "memory": {
                    "type": "integer",
                    "format": "int64"
                },
                "xml_file_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "enum",
                    "description": "Job status",
                    "enum": [
                        "waiting",
                        "running",
                        "completed",
                        "failed"
                    ]
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
                
            },
            "xml": {
                "name": "q"
            }
        },
        "Stat": {
            "type": "object",
            "required": [
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "job_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "cpu": {
                    "type": "Number",
                    "format": "float"
                },
                "mem": {
                    "type": "Number",
                    "format": "float"
                },
                "alerts": {
                    "type": "string",
                    "description": "Alerts (if any)"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
                
            },
            "xml": {
                "name": "q"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Tag"
            }
        },
        "Order": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "petId": {
                    "type": "integer",
                    "format": "int64"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "shipDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string",
                    "description": "Order Status",
                    "enum": [
                        "placed",
                        "approved",
                        "delivered"
                    ]
                },
                "complete": {
                    "type": "boolean"
                }
            },
            "xml": {
                "name": "Order"
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "username": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "userStatus": {
                    "type": "integer",
                    "format": "int32",
                    "description": "User Status"
                }
            },
            "xml": {
                "name": "User"
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}